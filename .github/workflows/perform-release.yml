name: Perform Release

on:
  push:
    tags:
      - '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'
      - run: yarn install --immutable
      - run: yarn build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64,arm'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: mattwebbio
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate tags (alpine)
        id: alpine_docker_tags
        uses: docker/metadata-action@v5
        with:
          images: |
            mattwebbio/orbital-sync
            ghcr.io/mattwebbio/orbital-sync
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Build and push (alpine)
        uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_IMAGE=node:20-alpine
          push: true
          tags: ${{ steps.alpine_docker_tags.outputs.tags }}
          labels: ${{ steps.alpine_docker_tags.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm
      - name: Generate tags (distroless)
        id: distroless_docker_tags
        uses: docker/metadata-action@v5
        with:
          images: |
            mattwebbio/orbital-sync
            ghcr.io/mattwebbio/orbital-sync
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
          flavor: |
            suffix=-distroless,onlatest=true
      - name: Build and push (distroless)
        uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_IMAGE=gcr.io/distroless/nodejs20:latest
          push: true
          tags: ${{ steps.distroless_docker_tags.outputs.tags }}
          labels: ${{ steps.distroless_docker_tags.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm
      - name: Update DockerHub description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: mattwebbio
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  npm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'
      - run: yarn install --immutable
      - run: yarn tsc
      - run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc
      - run: yarn publish --registry https://npm.pkg.github.com
      - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - run: yarn publish --registry https://registry.npmjs.org
